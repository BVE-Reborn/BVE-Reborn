name: build
on: [push, pull_request]

env:
  RUST_BACKTRACE: full

jobs:
  build:
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        rust: [nightly-2020-05-07]
        os: [windows-2019, macos-latest, ubuntu-18.04]
        include:
          - rust: nightly-2020-05-07
            triple: x86_64-pc-windows-msvc
            os: windows-2019
            name: windows-build

          - rust: nightly-2020-05-07
            triple: x86_64-apple-darwin
            os: macos-latest
            name: mac-build

          - rust: nightly-2020-05-07
            triple: x86_64-unknown-linux-gnu
            os: ubuntu-18.04
            name: linux-build
    runs-on: ${{ matrix.os }}

    steps:
      - name: Set Env (win)
        run: |
          echo "::add-path::$env:USERPROFILE\.cargo\bin"
        shell: powershell
        if: matrix.os == 'windows-2019'

      - name: Set Env (nix)
        run: |
          echo "::add-path::$HOME/.cargo/bin"
        shell: bash
        if: matrix.os != 'windows-2019'

      - name: Checkout repository
        uses: actions/checkout@v1
        with:
          submodules: true

      - name: Install Rustup
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain none --profile minimal -y
        if: matrix.os == 'macos-latest' || matrix.os == 'windows-2019'
        shell: bash

      - name: Update Rustup
        run: |
          rustup self update
          rustup set profile minimal
        shell: bash

      - name: Install GLSLC (win)
        run: |
          curl https://ci.bvereborn.com/glslc-win.7z -o $env:USERPROFILE\glslc-win.7z
          7z x $env:USERPROFILE\glslc-win.7z -o"$env:USERPROFILE"
          ls $HOME
          echo "::add-path::$env:USERPROFILE"
        shell: powershell
        if: matrix.os == 'windows-2019'

      - name: Install GLSLC (mac)
        run: |
          curl https://ci.bvereborn.com/glslc-mac.tar.xz -o $HOME/glslc-mac.tar.xz
          tar -xf $HOME/glslc-mac.tar.xz -C $HOME
          ls $HOME
          echo "::add-path::$HOME"
        shell: bash
        if: matrix.os == 'macos-latest'

      - name: Install GLSLC (linux)
        run: |
          curl https://ci.bvereborn.com/glslc-linux.7z -o $HOME/glslc-linux.7z
          7z x $HOME/glslc-linux.7z -o$HOME
          chmod +x $HOME/glslc
          ls -lah $HOME
          echo "::add-path::$HOME"
        shell: bash
        if: matrix.os == 'ubuntu-18.04'

      - name: Install Rust ${{ matrix.rust }}
        run: |
          rustup set default-host ${{ matrix.triple }}
          rustup toolchain install ${{ matrix.rust }}
        shell: bash

      - name: Build Shaders
        run: |
          cargo run --package bve-build -- --shaderc
        shell: bash

      - name: Build
        run: |
          cargo build --all
        shell: bash

      - name: Build C API
        run: |
          cargo run --bin bve-build -- --color=always --cbindgen
        shell: bash
        if: matrix.os == 'windows-2019'

      - name: Run tests
        run: |
          cargo test --all
        shell: bash

      - name: Docs
        run: |
          cargo doc --all --no-deps
        shell: bash

      - name: CMake on C API
        run: |
          mkdir -p target/capi/debug/
          cd target/capi/debug/
          cmake ../../../bve-native/tests/
          cmake --build .
          cd -
        shell: bash
        if: matrix.os == 'windows-2019'

      - name: Run C API (win)
        run: |
          target/capi/debug/Debug/bve-native-c.exe
          target/capi/debug/Debug/bve-native-c.exe
        shell: bash
        if: matrix.os == 'windows-2019'

      - name: Prepare for artifact upload
        run: |
          mkdir ${{ matrix.name }}
          cp -r target/debug/bve-client${{ matrix.suffix }} target/debug/bve-corpus${{ matrix.suffix }} target/debug/bve-parser-run${{ matrix.suffix }} target/debug/bve-obj-conv${{ matrix.suffix }} bve-render/shaders/spirv ${{ matrix.name }}
        shell: bash

      - uses: actions/upload-artifact@v1
        with:
          name: bve-${{ matrix.name }}-debug
          path: ${{ matrix.name }}

#      - name: Run C API (unix)
#        run: |
#          target/capi/debug/bve-native-c
#          target/capi/debug/bve-native-cpp
#        shell: bash
#        if: matrix.os == 'ubuntu-18.04'
